<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		   width="100%" height="100%"
		   creationComplete="creationCompleteHandler( )" xmlns:components="com.radium.crm.view.components.*">
		   
	<mx:VBox left="30" top="20" verticalGap="5" >
		<mx:Form verticalGap="0" >
			<mx:FormItem>
				<mx:CheckBox id="syncCalls" 
						     selected="{_settings.syncCalls}" 
						     label="Sync my iPhone call history with Radium"
						     change="update( event )" />
			</mx:FormItem>
			<mx:FormItem>
				<mx:CheckBox id="syncSMS" 
							 selected="{_settings.syncSMS}" 
							 label="Sync my iPhone SMS history with Radium"
							 change="update( event )" />
			</mx:FormItem>
			
			<mx:Spacer height="1" />
			
			<mx:FormItem>
				<mx:Text id="infoField" styleName="link" condenseWhite="true">
					<mx:htmlText>
						<![CDATA[
							<a href='event:showPrivacyInfo' target='_blank'>
							This will not sync your history that is private. 
							Read more here.
							</a>
						]]>
					</mx:htmlText>
				</mx:Text>
				
				<mx:HBox horizontalGap="12">
					<mx:Button label="Run Full Sync" styleName="UIButton" click="syncHandler( )" />
					<components:LoaderAnimation id="loaderAnimation" />
				</mx:HBox>
				
				<mx:Text id="syncField" styleName="info" condenseWhite="true" htmlText=""/>
				<mx:Text id="viewField" styleName="link" condenseWhite="true" visible="false" >
					<mx:htmlText>
						<![CDATA[
							<a href='event:viewInRadium'>View in Radium</a>
						]]>
					</mx:htmlText>
				</mx:Text>
			</mx:FormItem>
			
		</mx:Form>
	</mx:VBox>
	
	<mx:Script>
		<![CDATA[
			import com.radium.crm.events.UpdateEvent;
			import com.radium.crm.model.Constants;
			import com.radium.crm.model.vo.SettingsVO;
			
			import flash.net.navigateToURL;
			
			import mx.core.Application;
			
			[Bindable]
			private var _settings:SettingsVO ;
			
			// ACCESSOR METHODS
			
			public function set settings( vo:SettingsVO ):void
			{
				_settings = vo ;
			}
			
			// PUBLIC
			
			public function updateLastSyncDate( str:String, status:String ):void
			{
				syncField.htmlText = "Last sync at " + str ;
				if( status ) syncField.htmlText += "<br/>Status: " + status ;
				viewField.visible = true ;
			}
			
			public function showLoaderAnimation( ):void
			{
				loaderAnimation.start( ) ;
			}
			
			public function stopLoaderAnimation( ):void
			{
				loaderAnimation.stop( ) ;
			}
			
			// PRIVATE METHODS
			
			private function syncHandler( ):void
			{
				dispatchEvent( new Event( "sync", true ) ) ;
			}
			
			// EVENT HANDLERS
			
			private function creationCompleteHandler( ):void
			{
				infoField.addEventListener( TextEvent.LINK, textLinkHandler ) ;
				viewField.addEventListener( TextEvent.LINK, textLinkHandler ) ;
			}
			
			private function update( e:Event ):void
			{
				dispatchEvent( new UpdateEvent( UpdateEvent.UPDATE_SETTINGS, e.currentTarget.id, e.currentTarget.selected, true ) ) ;
			}
			
			private function textLinkHandler( e:TextEvent ):void 
			{
				if( e.text == "showPrivacyInfo" )
				{
					dispatchEvent( new Event( "showPrivacyInfo", true ) ) ;
				}
				
				else if( e.text == "viewInRadium" )
				{
					navigateToURL( new URLRequest( Constants.SITE_URL ), "_blank" ) ;
				}
			}
			
		]]>
	</mx:Script>
	
</mx:Canvas>
