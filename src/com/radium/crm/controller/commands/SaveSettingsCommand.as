package com.radium.crm.controller.commands{		import com.radium.crm.model.Constants;	import com.radium.crm.model.ContentModel;	import com.radium.crm.model.vo.SettingsVO;	import com.radium.crm.signals.SettingsLoadedSignal;	import com.radium.crm.utils.SyncMonitor;	import com.radium.crm.utils.VOParser;		import flash.filesystem.File;	import flash.filesystem.FileMode;	import flash.filesystem.FileStream;		import org.robotlegs.mvcs.SignalCommand;		import flash.desktop.NativeApplication ;	 	/**	 * Saves the user's settings in a locally stored XML file.	 */		public class SaveSettingsCommand extends SignalCommand	{				[Inject]		public var id:String ;				[Inject]		public var value:Boolean ;				[Inject]		public var settingsLoadedSignal:SettingsLoadedSignal ;				[Inject]		public var model:ContentModel ;		override public function execute( ):void		{			trace( "SaveSettingsCommand.execute:", id, value ) ;						var xml:XML = new XML( "<data><settings></settings></data>" ) ;						xml.settings.syncCalls = model.settings.syncCalls ;			xml.settings.syncSMS = model.settings.syncSMS ;			xml.settings.rememberLogin = model.settings.rememberLogin ;			xml.settings.autoSync = model.settings.autoSync ;			xml.settings.autoUpdate = model.settings.autoUpdate ;			xml.settings.runOnStartup = model.settings.runOnStartup ;						xml.settings[ id ] = value ;			model.settings = VOParser.parseSettings( xml ) ;						try			{					// this will throw an error in debug mode				NativeApplication.nativeApplication.startAtLogin = model.settings.runOnStartup ;			}							catch( e:Error ) { }						var file:File = File.applicationStorageDirectory.resolvePath( model.settingsURL ) ;			var newXMLStr:String = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + xml.toXMLString( ) ;			var fs:FileStream = new FileStream( ) ;						fs.open( file, FileMode.WRITE ) ;			fs.writeUTFBytes( newXMLStr ) ;			fs.close( ) ;		}	}}