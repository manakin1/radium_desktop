package com.radium.crm.controller.commands{		import com.radium.crm.model.Constants;	import com.radium.crm.model.ContentModel;	import com.radium.crm.model.vo.CredentialsVO;	import com.radium.crm.model.vo.UserVO;	import com.radium.crm.signals.AuthenticateSignal;	import com.radium.crm.signals.CredentialsFailedSignal;		import flash.data.EncryptedLocalStore;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.filesystem.*;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.utils.ByteArray;		import org.robotlegs.mvcs.SignalCommand ;		/**	 * Loads the locally stored user credentials.	 */
	 	public class LoadCredentialsCommand extends SignalCommand	{				[Inject]		public var model:ContentModel ;				[Inject]		public var credentialsFailedSignal:CredentialsFailedSignal ;				[Inject]		public var authenticateSignal:AuthenticateSignal ;				private var _loader:URLLoader ;		override public function execute( ):void		{					trace( "LoadCredentialsCommand.execute" ) ;						var storedEmail:ByteArray = EncryptedLocalStore.getItem( "email" ) ;			var storedPassword:ByteArray = EncryptedLocalStore.getItem( "password" ) ;			var storedServer:ByteArray = EncryptedLocalStore.getItem( "server" ) ;						if( storedEmail && storedPassword && storedServer )			{				trace( "Loaded credentials" ) ;								var email:String = storedEmail.readUTFBytes( storedEmail.length ) ;				var password:String = storedPassword.readUTFBytes( storedPassword.length ) ;				var server:String = storedServer.readUTFBytes( storedServer.length ) ;								var loginCredentials:CredentialsVO = new CredentialsVO( email, password ) ;									model.credentials = loginCredentials ;				model.serverURL = server ;				authenticateSignal.dispatch( loginCredentials ) ;			}						else 			{				trace( "No credentials found" ) ;				credentialsFailedSignal.dispatch( ) ;			}		}				}}